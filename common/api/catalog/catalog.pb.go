// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.25.1
// source: api/catalog/catalog.proto

package catalog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeedSort int32

const (
	FeedSort_Featured  FeedSort = 0
	FeedSort_New       FeedSort = 1
	FeedSort_PriceAsc  FeedSort = 2
	FeedSort_PriceDesc FeedSort = 3
)

// Enum value maps for FeedSort.
var (
	FeedSort_name = map[int32]string{
		0: "Featured",
		1: "New",
		2: "PriceAsc",
		3: "PriceDesc",
	}
	FeedSort_value = map[string]int32{
		"Featured":  0,
		"New":       1,
		"PriceAsc":  2,
		"PriceDesc": 3,
	}
)

func (x FeedSort) Enum() *FeedSort {
	p := new(FeedSort)
	*p = x
	return p
}

func (x FeedSort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedSort) Descriptor() protoreflect.EnumDescriptor {
	return file_api_catalog_catalog_proto_enumTypes[0].Descriptor()
}

func (FeedSort) Type() protoreflect.EnumType {
	return &file_api_catalog_catalog_proto_enumTypes[0]
}

func (x FeedSort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedSort.Descriptor instead.
func (FeedSort) EnumDescriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{0}
}

type DetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DetailsRequest) Reset() {
	*x = DetailsRequest{}
	mi := &file_api_catalog_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsRequest) ProtoMessage() {}

func (x *DetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsRequest.ProtoReflect.Descriptor instead.
func (*DetailsRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *DetailsRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Laptop  *Laptop       `protobuf:"bytes,1,opt,name=laptop,proto3" json:"laptop,omitempty"`
	Related []*LaptopCard `protobuf:"bytes,2,rep,name=related,proto3" json:"related,omitempty"`
}

func (x *DetailsResponse) Reset() {
	*x = DetailsResponse{}
	mi := &file_api_catalog_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsResponse) ProtoMessage() {}

func (x *DetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsResponse.ProtoReflect.Descriptor instead.
func (*DetailsResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *DetailsResponse) GetLaptop() *Laptop {
	if x != nil {
		return x.Laptop
	}
	return nil
}

func (x *DetailsResponse) GetRelated() []*LaptopCard {
	if x != nil {
		return x.Related
	}
	return nil
}

type CPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string  `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Model           string  `protobuf:"bytes,2,opt,name=Model,proto3" json:"Model,omitempty"`
	Architecture    string  `protobuf:"bytes,3,opt,name=Architecture,proto3" json:"Architecture,omitempty"`
	Lithography     int64   `protobuf:"varint,4,opt,name=Lithography,proto3" json:"Lithography,omitempty"`
	Cache           float64 `protobuf:"fixed64,5,opt,name=Cache,proto3" json:"Cache,omitempty"`
	BaseSpeed       float64 `protobuf:"fixed64,6,opt,name=BaseSpeed,proto3" json:"BaseSpeed,omitempty"`
	BoostSpeed      float64 `protobuf:"fixed64,7,opt,name=BoostSpeed,proto3" json:"BoostSpeed,omitempty"`
	Cores           int64   `protobuf:"varint,8,opt,name=Cores,proto3" json:"Cores,omitempty"`
	Tdp             int64   `protobuf:"varint,9,opt,name=Tdp,proto3" json:"Tdp,omitempty"`
	IntegratedVideo string  `protobuf:"bytes,10,opt,name=IntegratedVideo,proto3" json:"IntegratedVideo,omitempty"`
	OtherInfo       string  `protobuf:"bytes,11,opt,name=OtherInfo,proto3" json:"OtherInfo,omitempty"`
}

func (x *CPU) Reset() {
	*x = CPU{}
	mi := &file_api_catalog_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *CPU) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CPU) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *CPU) GetLithography() int64 {
	if x != nil {
		return x.Lithography
	}
	return 0
}

func (x *CPU) GetCache() float64 {
	if x != nil {
		return x.Cache
	}
	return 0
}

func (x *CPU) GetBaseSpeed() float64 {
	if x != nil {
		return x.BaseSpeed
	}
	return 0
}

func (x *CPU) GetBoostSpeed() float64 {
	if x != nil {
		return x.BoostSpeed
	}
	return 0
}

func (x *CPU) GetCores() int64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CPU) GetTdp() int64 {
	if x != nil {
		return x.Tdp
	}
	return 0
}

func (x *CPU) GetIntegratedVideo() string {
	if x != nil {
		return x.IntegratedVideo
	}
	return ""
}

func (x *CPU) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

type GPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string  `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Producer     string  `protobuf:"bytes,2,opt,name=Producer,proto3" json:"Producer,omitempty"`
	Model        string  `protobuf:"bytes,3,opt,name=Model,proto3" json:"Model,omitempty"`
	Architecture string  `protobuf:"bytes,4,opt,name=Architecture,proto3" json:"Architecture,omitempty"`
	Lithography  int64   `protobuf:"varint,5,opt,name=Lithography,proto3" json:"Lithography,omitempty"`
	BaseSpeed    float64 `protobuf:"fixed64,6,opt,name=BaseSpeed,proto3" json:"BaseSpeed,omitempty"`
	BoostSpeed   float64 `protobuf:"fixed64,7,opt,name=BoostSpeed,proto3" json:"BoostSpeed,omitempty"`
	MemorySize   int64   `protobuf:"varint,8,opt,name=MemorySize,proto3" json:"MemorySize,omitempty"`
	MemorySpeed  float64 `protobuf:"fixed64,9,opt,name=MemorySpeed,proto3" json:"MemorySpeed,omitempty"`
	MemoryType   string  `protobuf:"bytes,10,opt,name=MemoryType,proto3" json:"MemoryType,omitempty"`
	Tdp          int64   `protobuf:"varint,11,opt,name=Tdp,proto3" json:"Tdp,omitempty"`
	OtherInfo    string  `protobuf:"bytes,12,opt,name=OtherInfo,proto3" json:"OtherInfo,omitempty"`
}

func (x *GPU) Reset() {
	*x = GPU{}
	mi := &file_api_catalog_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPU) ProtoMessage() {}

func (x *GPU) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPU.ProtoReflect.Descriptor instead.
func (*GPU) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *GPU) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GPU) GetProducer() string {
	if x != nil {
		return x.Producer
	}
	return ""
}

func (x *GPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GPU) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *GPU) GetLithography() int64 {
	if x != nil {
		return x.Lithography
	}
	return 0
}

func (x *GPU) GetBaseSpeed() float64 {
	if x != nil {
		return x.BaseSpeed
	}
	return 0
}

func (x *GPU) GetBoostSpeed() float64 {
	if x != nil {
		return x.BoostSpeed
	}
	return 0
}

func (x *GPU) GetMemorySize() int64 {
	if x != nil {
		return x.MemorySize
	}
	return 0
}

func (x *GPU) GetMemorySpeed() float64 {
	if x != nil {
		return x.MemorySpeed
	}
	return 0
}

func (x *GPU) GetMemoryType() string {
	if x != nil {
		return x.MemoryType
	}
	return ""
}

func (x *GPU) GetTdp() int64 {
	if x != nil {
		return x.Tdp
	}
	return 0
}

func (x *GPU) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

type Display struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string  `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Size        float64 `protobuf:"fixed64,2,opt,name=Size,proto3" json:"Size,omitempty"`
	HResolution int64   `protobuf:"varint,3,opt,name=HResolution,proto3" json:"HResolution,omitempty"`
	VResolution int64   `protobuf:"varint,4,opt,name=VResolution,proto3" json:"VResolution,omitempty"`
	Type        string  `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	SRGB        float64 `protobuf:"fixed64,6,opt,name=SRGB,proto3" json:"SRGB,omitempty"`
	Touchscreen bool    `protobuf:"varint,7,opt,name=Touchscreen,proto3" json:"Touchscreen,omitempty"`
	OtherInfo   string  `protobuf:"bytes,8,opt,name=OtherInfo,proto3" json:"OtherInfo,omitempty"`
}

func (x *Display) Reset() {
	*x = Display{}
	mi := &file_api_catalog_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Display) ProtoMessage() {}

func (x *Display) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Display.ProtoReflect.Descriptor instead.
func (*Display) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *Display) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Display) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Display) GetHResolution() int64 {
	if x != nil {
		return x.HResolution
	}
	return 0
}

func (x *Display) GetVResolution() int64 {
	if x != nil {
		return x.VResolution
	}
	return 0
}

func (x *Display) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Display) GetSRGB() float64 {
	if x != nil {
		return x.SRGB
	}
	return 0
}

func (x *Display) GetTouchscreen() bool {
	if x != nil {
		return x.Touchscreen
	}
	return false
}

func (x *Display) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

type Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string  `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Size  int64   `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Speed float64 `protobuf:"fixed64,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
	Type  string  `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Memory) Reset() {
	*x = Memory{}
	mi := &file_api_catalog_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *Memory) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Memory) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Memory) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Memory) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Capacity int64  `protobuf:"varint,2,opt,name=Capacity,proto3" json:"Capacity,omitempty"`
	Speed    int64  `protobuf:"varint,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
	Model    string `protobuf:"bytes,4,opt,name=Model,proto3" json:"Model,omitempty"`
}

func (x *Storage) Reset() {
	*x = Storage{}
	mi := &file_api_catalog_catalog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *Storage) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Storage) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Storage) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Storage) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type WirelessCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Model     string `protobuf:"bytes,2,opt,name=Model,proto3" json:"Model,omitempty"`
	Speed     int64  `protobuf:"varint,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
	OtherInfo string `protobuf:"bytes,4,opt,name=OtherInfo,proto3" json:"OtherInfo,omitempty"`
}

func (x *WirelessCard) Reset() {
	*x = WirelessCard{}
	mi := &file_api_catalog_catalog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WirelessCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirelessCard) ProtoMessage() {}

func (x *WirelessCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirelessCard.ProtoReflect.Descriptor instead.
func (*WirelessCard) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{7}
}

func (x *WirelessCard) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *WirelessCard) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *WirelessCard) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *WirelessCard) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

type Motherboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Ram     string `protobuf:"bytes,2,opt,name=Ram,proto3" json:"Ram,omitempty"`
	Storage string `protobuf:"bytes,3,opt,name=Storage,proto3" json:"Storage,omitempty"`
}

func (x *Motherboard) Reset() {
	*x = Motherboard{}
	mi := &file_api_catalog_catalog_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Motherboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Motherboard) ProtoMessage() {}

func (x *Motherboard) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Motherboard.ProtoReflect.Descriptor instead.
func (*Motherboard) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{8}
}

func (x *Motherboard) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Motherboard) GetRam() string {
	if x != nil {
		return x.Ram
	}
	return ""
}

func (x *Motherboard) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

type Chasis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string         `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Height    float64        `protobuf:"fixed64,2,opt,name=Height,proto3" json:"Height,omitempty"`
	Depth     float64        `protobuf:"fixed64,3,opt,name=Depth,proto3" json:"Depth,omitempty"`
	Width     float64        `protobuf:"fixed64,4,opt,name=Width,proto3" json:"Width,omitempty"`
	Weight    float64        `protobuf:"fixed64,5,opt,name=Weight,proto3" json:"Weight,omitempty"`
	Colors    []string       `protobuf:"bytes,6,rep,name=Colors,proto3" json:"Colors,omitempty"`
	Webcam    float64        `protobuf:"fixed64,7,opt,name=Webcam,proto3" json:"Webcam,omitempty"`
	OtherInfo string         `protobuf:"bytes,8,opt,name=OtherInfo,proto3" json:"OtherInfo,omitempty"`
	Ports     []*Chasis_Port `protobuf:"bytes,9,rep,name=Ports,proto3" json:"Ports,omitempty"`
}

func (x *Chasis) Reset() {
	*x = Chasis{}
	mi := &file_api_catalog_catalog_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chasis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chasis) ProtoMessage() {}

func (x *Chasis) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chasis.ProtoReflect.Descriptor instead.
func (*Chasis) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{9}
}

func (x *Chasis) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Chasis) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Chasis) GetDepth() float64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *Chasis) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Chasis) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Chasis) GetColors() []string {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *Chasis) GetWebcam() float64 {
	if x != nil {
		return x.Webcam
	}
	return 0
}

func (x *Chasis) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

func (x *Chasis) GetPorts() []*Chasis_Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

type Battery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string  `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Capacity  float64 `protobuf:"fixed64,2,opt,name=Capacity,proto3" json:"Capacity,omitempty"`
	Type      string  `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Life      float64 `protobuf:"fixed64,4,opt,name=Life,proto3" json:"Life,omitempty"`
	OtherInfo string  `protobuf:"bytes,5,opt,name=OtherInfo,proto3" json:"OtherInfo,omitempty"`
}

func (x *Battery) Reset() {
	*x = Battery{}
	mi := &file_api_catalog_catalog_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Battery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Battery) ProtoMessage() {}

func (x *Battery) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Battery.ProtoReflect.Descriptor instead.
func (*Battery) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{10}
}

func (x *Battery) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Battery) GetCapacity() float64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Battery) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Battery) GetLife() float64 {
	if x != nil {
		return x.Life
	}
	return 0
}

func (x *Battery) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

type Laptop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string          `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	NotebId      int64           `protobuf:"varint,2,opt,name=NotebId,proto3" json:"NotebId,omitempty"`
	Name         string          `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Brand        string          `protobuf:"bytes,4,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Thumbnail    string          `protobuf:"bytes,5,opt,name=Thumbnail,proto3" json:"Thumbnail,omitempty"`
	Images       []string        `protobuf:"bytes,6,rep,name=Images,proto3" json:"Images,omitempty"`
	Link         string          `protobuf:"bytes,7,opt,name=Link,proto3" json:"Link,omitempty"`
	Launched     string          `protobuf:"bytes,8,opt,name=Launched,proto3" json:"Launched,omitempty"`
	PriceMin     float64         `protobuf:"fixed64,9,opt,name=PriceMin,proto3" json:"PriceMin,omitempty"`
	PriceMax     float64         `protobuf:"fixed64,10,opt,name=PriceMax,proto3" json:"PriceMax,omitempty"`
	CPU          []*CPU          `protobuf:"bytes,11,rep,name=CPU,proto3" json:"CPU,omitempty"`
	GPU          []*GPU          `protobuf:"bytes,12,rep,name=GPU,proto3" json:"GPU,omitempty"`
	Display      []*Display      `protobuf:"bytes,13,rep,name=Display,proto3" json:"Display,omitempty"`
	Memory       []*Memory       `protobuf:"bytes,14,rep,name=Memory,proto3" json:"Memory,omitempty"`
	Storage      []*Storage      `protobuf:"bytes,15,rep,name=Storage,proto3" json:"Storage,omitempty"`
	WirelessCard []*WirelessCard `protobuf:"bytes,16,rep,name=WirelessCard,proto3" json:"WirelessCard,omitempty"`
	Motherboard  []*Motherboard  `protobuf:"bytes,17,rep,name=Motherboard,proto3" json:"Motherboard,omitempty"`
	Chasis       []*Chasis       `protobuf:"bytes,18,rep,name=Chasis,proto3" json:"Chasis,omitempty"`
	Battery      []*Battery      `protobuf:"bytes,19,rep,name=Battery,proto3" json:"Battery,omitempty"`
}

func (x *Laptop) Reset() {
	*x = Laptop{}
	mi := &file_api_catalog_catalog_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Laptop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Laptop) ProtoMessage() {}

func (x *Laptop) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Laptop.ProtoReflect.Descriptor instead.
func (*Laptop) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{11}
}

func (x *Laptop) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Laptop) GetNotebId() int64 {
	if x != nil {
		return x.NotebId
	}
	return 0
}

func (x *Laptop) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Laptop) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Laptop) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Laptop) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Laptop) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Laptop) GetLaunched() string {
	if x != nil {
		return x.Launched
	}
	return ""
}

func (x *Laptop) GetPriceMin() float64 {
	if x != nil {
		return x.PriceMin
	}
	return 0
}

func (x *Laptop) GetPriceMax() float64 {
	if x != nil {
		return x.PriceMax
	}
	return 0
}

func (x *Laptop) GetCPU() []*CPU {
	if x != nil {
		return x.CPU
	}
	return nil
}

func (x *Laptop) GetGPU() []*GPU {
	if x != nil {
		return x.GPU
	}
	return nil
}

func (x *Laptop) GetDisplay() []*Display {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *Laptop) GetMemory() []*Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *Laptop) GetStorage() []*Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Laptop) GetWirelessCard() []*WirelessCard {
	if x != nil {
		return x.WirelessCard
	}
	return nil
}

func (x *Laptop) GetMotherboard() []*Motherboard {
	if x != nil {
		return x.Motherboard
	}
	return nil
}

func (x *Laptop) GetChasis() []*Chasis {
	if x != nil {
		return x.Chasis
	}
	return nil
}

func (x *Laptop) GetBattery() []*Battery {
	if x != nil {
		return x.Battery
	}
	return nil
}

type LaptopCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string   `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Brand       string   `protobuf:"bytes,3,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Thumbnail   string   `protobuf:"bytes,4,opt,name=Thumbnail,proto3" json:"Thumbnail,omitempty"`
	Launched    string   `protobuf:"bytes,5,opt,name=Launched,proto3" json:"Launched,omitempty"`
	PriceMin    float64  `protobuf:"fixed64,6,opt,name=PriceMin,proto3" json:"PriceMin,omitempty"`
	PriceMax    float64  `protobuf:"fixed64,7,opt,name=PriceMax,proto3" json:"PriceMax,omitempty"`
	Colors      []string `protobuf:"bytes,8,rep,name=Colors,proto3" json:"Colors,omitempty"`
	Size        float64  `protobuf:"fixed64,9,opt,name=Size,proto3" json:"Size,omitempty"`
	Cpu         string   `protobuf:"bytes,10,opt,name=Cpu,proto3" json:"Cpu,omitempty"`
	Cores       int64    `protobuf:"varint,11,opt,name=Cores,proto3" json:"Cores,omitempty"`
	BaseSpeed   float64  `protobuf:"fixed64,12,opt,name=BaseSpeed,proto3" json:"BaseSpeed,omitempty"`
	Memory      int64    `protobuf:"varint,13,opt,name=Memory,proto3" json:"Memory,omitempty"`
	Storage     int64    `protobuf:"varint,14,opt,name=Storage,proto3" json:"Storage,omitempty"`
	BatteryLife float64  `protobuf:"fixed64,15,opt,name=BatteryLife,proto3" json:"BatteryLife,omitempty"`
}

func (x *LaptopCard) Reset() {
	*x = LaptopCard{}
	mi := &file_api_catalog_catalog_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LaptopCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaptopCard) ProtoMessage() {}

func (x *LaptopCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaptopCard.ProtoReflect.Descriptor instead.
func (*LaptopCard) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{12}
}

func (x *LaptopCard) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LaptopCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LaptopCard) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *LaptopCard) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *LaptopCard) GetLaunched() string {
	if x != nil {
		return x.Launched
	}
	return ""
}

func (x *LaptopCard) GetPriceMin() float64 {
	if x != nil {
		return x.PriceMin
	}
	return 0
}

func (x *LaptopCard) GetPriceMax() float64 {
	if x != nil {
		return x.PriceMax
	}
	return 0
}

func (x *LaptopCard) GetColors() []string {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *LaptopCard) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LaptopCard) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *LaptopCard) GetCores() int64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *LaptopCard) GetBaseSpeed() float64 {
	if x != nil {
		return x.BaseSpeed
	}
	return 0
}

func (x *LaptopCard) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *LaptopCard) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *LaptopCard) GetBatteryLife() float64 {
	if x != nil {
		return x.BatteryLife
	}
	return 0
}

type FeedFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *FeedFilter) Reset() {
	*x = FeedFilter{}
	mi := &file_api_catalog_catalog_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedFilter) ProtoMessage() {}

func (x *FeedFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedFilter.ProtoReflect.Descriptor instead.
func (*FeedFilter) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{13}
}

func (x *FeedFilter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FeedFilter) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type FeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*FeedFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Sort    FeedSort      `protobuf:"varint,2,opt,name=sort,proto3,enum=catalog.FeedSort" json:"sort,omitempty"`
	Page    int64         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	mi := &file_api_catalog_catalog_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{14}
}

func (x *FeedRequest) GetFilters() []*FeedFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *FeedRequest) GetSort() FeedSort {
	if x != nil {
		return x.Sort
	}
	return FeedSort_Featured
}

func (x *FeedRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Laptops []*LaptopCard `protobuf:"bytes,1,rep,name=laptops,proto3" json:"laptops,omitempty"`
	Current int64         `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	Pages   int64         `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *FeedResponse) Reset() {
	*x = FeedResponse{}
	mi := &file_api_catalog_catalog_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedResponse) ProtoMessage() {}

func (x *FeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedResponse.ProtoReflect.Descriptor instead.
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{15}
}

func (x *FeedResponse) GetLaptops() []*LaptopCard {
	if x != nil {
		return x.Laptops
	}
	return nil
}

func (x *FeedResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *FeedResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type Chasis_Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Chasis_Port) Reset() {
	*x = Chasis_Port{}
	mi := &file_api_catalog_catalog_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chasis_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chasis_Port) ProtoMessage() {}

func (x *Chasis_Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_catalog_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chasis_Port.ProtoReflect.Descriptor instead.
func (*Chasis_Port) Descriptor() ([]byte, []int) {
	return file_api_catalog_catalog_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Chasis_Port) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Chasis_Port) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Chasis_Port) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_api_catalog_catalog_proto protoreflect.FileDescriptor

var file_api_catalog_catalog_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x22, 0x22, 0x0a, 0x0e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6c,
	0x61, 0x70, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x52, 0x06, 0x6c, 0x61,
	0x70, 0x74, 0x6f, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x22, 0xb7, 0x02, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x74, 0x68, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x69,
	0x74, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x64, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x54, 0x64, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdf, 0x02,
	0x0a, 0x03, 0x47, 0x50, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4c, 0x69, 0x74, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x4c, 0x69, 0x74, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x54, 0x64, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x54, 0x64,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xdb, 0x01, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x48, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x56, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x56, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x52, 0x47,
	0x42, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x53, 0x52, 0x47, 0x42, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a,
	0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x6a, 0x0a, 0x0c,
	0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x0b, 0x4d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x52, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x73, 0x69, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65,
	0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x62, 0x63, 0x61, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x57, 0x65, 0x62, 0x63, 0x61, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x05,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x73, 0x69, 0x73, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x42, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x07,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x66,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4c, 0x69, 0x66, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x85, 0x05, 0x0a, 0x06,
	0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x65,
	0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4e, 0x6f, 0x74, 0x65, 0x62,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x1e, 0x0a, 0x03, 0x43, 0x50,
	0x55, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x03, 0x43, 0x50, 0x55, 0x12, 0x1e, 0x0a, 0x03, 0x47, 0x50,
	0x55, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x47, 0x50, 0x55, 0x52, 0x03, 0x47, 0x50, 0x55, 0x12, 0x2a, 0x0a, 0x07, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x2a, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x57,
	0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x4d, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x4d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x0b, 0x4d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x27,
	0x0a, 0x06, 0x43, 0x68, 0x61, 0x73, 0x69, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x73, 0x69, 0x73, 0x52,
	0x06, 0x43, 0x68, 0x61, 0x73, 0x69, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x07, 0x42, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x22, 0x80, 0x03, 0x0a, 0x0a, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x4d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x43, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x70, 0x75, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x66, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x22, 0x30, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x6d, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x6c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x61, 0x70,
	0x74, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x07, 0x6c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x2a, 0x3e, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x65,
	0x77, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x73, 0x63, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x10, 0x03,
	0x32, 0x92, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61,
	0x70, 0x74, 0x6f, 0x70, 0x46, 0x65, 0x65, 0x64, 0x12, 0x14, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69, 0x62, 0x7a, 0x72, 0x61, 0x65, 0x6c, 0x2f, 0x72, 0x61, 0x65,
	0x6c, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_catalog_catalog_proto_rawDescOnce sync.Once
	file_api_catalog_catalog_proto_rawDescData = file_api_catalog_catalog_proto_rawDesc
)

func file_api_catalog_catalog_proto_rawDescGZIP() []byte {
	file_api_catalog_catalog_proto_rawDescOnce.Do(func() {
		file_api_catalog_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_catalog_catalog_proto_rawDescData)
	})
	return file_api_catalog_catalog_proto_rawDescData
}

var file_api_catalog_catalog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_catalog_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_catalog_catalog_proto_goTypes = []any{
	(FeedSort)(0),           // 0: catalog.FeedSort
	(*DetailsRequest)(nil),  // 1: catalog.DetailsRequest
	(*DetailsResponse)(nil), // 2: catalog.DetailsResponse
	(*CPU)(nil),             // 3: catalog.CPU
	(*GPU)(nil),             // 4: catalog.GPU
	(*Display)(nil),         // 5: catalog.Display
	(*Memory)(nil),          // 6: catalog.Memory
	(*Storage)(nil),         // 7: catalog.Storage
	(*WirelessCard)(nil),    // 8: catalog.WirelessCard
	(*Motherboard)(nil),     // 9: catalog.Motherboard
	(*Chasis)(nil),          // 10: catalog.Chasis
	(*Battery)(nil),         // 11: catalog.Battery
	(*Laptop)(nil),          // 12: catalog.Laptop
	(*LaptopCard)(nil),      // 13: catalog.LaptopCard
	(*FeedFilter)(nil),      // 14: catalog.FeedFilter
	(*FeedRequest)(nil),     // 15: catalog.FeedRequest
	(*FeedResponse)(nil),    // 16: catalog.FeedResponse
	(*Chasis_Port)(nil),     // 17: catalog.Chasis.Port
}
var file_api_catalog_catalog_proto_depIdxs = []int32{
	12, // 0: catalog.DetailsResponse.laptop:type_name -> catalog.Laptop
	13, // 1: catalog.DetailsResponse.related:type_name -> catalog.LaptopCard
	17, // 2: catalog.Chasis.Ports:type_name -> catalog.Chasis.Port
	3,  // 3: catalog.Laptop.CPU:type_name -> catalog.CPU
	4,  // 4: catalog.Laptop.GPU:type_name -> catalog.GPU
	5,  // 5: catalog.Laptop.Display:type_name -> catalog.Display
	6,  // 6: catalog.Laptop.Memory:type_name -> catalog.Memory
	7,  // 7: catalog.Laptop.Storage:type_name -> catalog.Storage
	8,  // 8: catalog.Laptop.WirelessCard:type_name -> catalog.WirelessCard
	9,  // 9: catalog.Laptop.Motherboard:type_name -> catalog.Motherboard
	10, // 10: catalog.Laptop.Chasis:type_name -> catalog.Chasis
	11, // 11: catalog.Laptop.Battery:type_name -> catalog.Battery
	14, // 12: catalog.FeedRequest.filters:type_name -> catalog.FeedFilter
	0,  // 13: catalog.FeedRequest.sort:type_name -> catalog.FeedSort
	13, // 14: catalog.FeedResponse.laptops:type_name -> catalog.LaptopCard
	1,  // 15: catalog.CatalogService.getLaptopDetails:input_type -> catalog.DetailsRequest
	15, // 16: catalog.CatalogService.laptopFeed:input_type -> catalog.FeedRequest
	2,  // 17: catalog.CatalogService.getLaptopDetails:output_type -> catalog.DetailsResponse
	16, // 18: catalog.CatalogService.laptopFeed:output_type -> catalog.FeedResponse
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_catalog_catalog_proto_init() }
func file_api_catalog_catalog_proto_init() {
	if File_api_catalog_catalog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_catalog_catalog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_catalog_catalog_proto_goTypes,
		DependencyIndexes: file_api_catalog_catalog_proto_depIdxs,
		EnumInfos:         file_api_catalog_catalog_proto_enumTypes,
		MessageInfos:      file_api_catalog_catalog_proto_msgTypes,
	}.Build()
	File_api_catalog_catalog_proto = out.File
	file_api_catalog_catalog_proto_rawDesc = nil
	file_api_catalog_catalog_proto_goTypes = nil
	file_api_catalog_catalog_proto_depIdxs = nil
}
